version: '3.8'

services:
  user:
    build:
      dockerfile: ./apps/user/Dockerfile
      context: .
      target: development
    command: npm run start:dev user
    env_file:
      - ./apps/user/.development.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  token:
    build:
      dockerfile: ./apps/token/Dockerfile
      context: .
      target: development
    command: npm run start:dev token
    env_file:
      - ./apps/token/.development.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.development.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      user:
        condition: service_started
      token:
        condition: service_started
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    command: npm run start:dev gateway
    env_file:
      - ./apps/gateway/.development.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      user:
        condition: service_started
      token:
        condition: service_started
      auth:
        condition: service_started
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - .psql.dev.env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - '5050:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin4
      - PGADMIN_LOG_LEVEL=ERROR
    user: '$UID:$GID'
    env_file:
      - .psql.dev.env
    depends_on:
      postgres:
        condition: service_started

  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s

networks:
  default:
    driver: bridge

volumes:
  postgres_data: {}
